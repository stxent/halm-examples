when:
  - event: [push, manual]

clone:
  git:
    image: ${DOCKER_PREFIX}/network-utils
    pull: true
    commands:
      - git clone ${CI_REPO_CLONE_URL} project
      - cd project
      - git checkout ${CI_COMMIT_SHA}
      - git submodule update --init --recursive
      - export REPO_REVISION=`git rev-list HEAD --count`
      - echo "ARTIFACT_PREFIX=${CI_REPO_NAME}_r$${REPO_REVISION}-${CI_COMMIT_SHA:0:8}_b${CI_PIPELINE_NUMBER}" >> envvars
      - echo "CMAKE_ARGS=\"\"" >> envvars
      - echo "CMAKE_ARGS_nor=\"-DTARGET_NOR=ON -DUSE_DFU=ON\"" >> envvars
      - echo "CMAKE_ARGS_sram=\"-DTARGET_SRAM=ON\"" >> envvars
      - echo "SED_PATTERN=\"s/[[:space:]]\{1,\}/ /g;s/^[[:space:]]*//;s/[[:space:]]*$//;s/\.\\///;s/\([[:digit:]]*\) \([[:digit:]]*\) \([[:digit:]]*\) \([[:digit:]]*\) \([[:alnum:]]*\) \([[:graph:]]*\).*$/\6;\1;\2;\3;\4/\"" >> envvars

steps:
  build_x86:
    image: ${DOCKER_PREFIX}/gcc-desktop
    pull: true
    commands:
      - cd project
      - cmake . -B build-x86-deb -DCMAKE_BUILD_TYPE=Debug
      - make -C build-x86-deb -j `nproc`
      - cmake . -B build-x86-rel -DCMAKE_BUILD_TYPE=Release
      - make -C build-x86-rel -j `nproc`

  build_arm_deb:
    image: ${DOCKER_PREFIX}/gcc-arm-embedded
    pull: true
    commands:
      - cd project
      - source ./envvars
      - |
        for BUILD_DIR_SUFFIX in "" "_nor" "_sram" ; do
          export BUILD_DIR="build-deb$${BUILD_DIR_SUFFIX}"
          eval "export BUILD_DIR_ARGS=\$${CMAKE_ARGS$${BUILD_DIR_SUFFIX}}"
          cmake . -B $${BUILD_DIR} -DCMAKE_BUILD_TYPE=Debug $${BUILD_DIR_ARGS}
          make -C $${BUILD_DIR} -j `nproc`
        done

  build_arm_rel:
    image: ${DOCKER_PREFIX}/gcc-arm-embedded
    pull: true
    commands:
      - cd project
      - source ./envvars
      - mkdir -p deploy
      - |
        for BUILD_DIR_SUFFIX in "" "_nor" "_sram" ; do
          export BUILD_DIR="build-rel$${BUILD_DIR_SUFFIX}"
          eval "export BUILD_DIR_ARGS=\$${CMAKE_ARGS$${BUILD_DIR_SUFFIX}}"
          cmake . -B $${BUILD_DIR} -DCMAKE_BUILD_TYPE=Release $${BUILD_DIR_ARGS}
          make -C $${BUILD_DIR} -j `nproc`
          cd $${BUILD_DIR} && find . -name "*.elf" -exec arm-none-eabi-size {} \; | grep \.elf | sort -k6 | sed "$${SED_PATTERN}" > ../deploy/$${ARTIFACT_PREFIX}$${BUILD_DIR_SUFFIX}.csv && cd -
        done

  deploy_rel:
    image: ${DOCKER_PREFIX}/network-utils
    pull: true
    commands:
      - cd project
      - source ./envvars
      - mkdir -p deploy
      - |
        for BUILD_DIR_SUFFIX in "" "_nor" "_sram" ; do
          cd "build-rel$${BUILD_DIR_SUFFIX}" && find . ! -path "*CMakeFiles*" -name "*.bin" | xargs tar -cvJ -f ../deploy/$${ARTIFACT_PREFIX}$${BUILD_DIR_SUFFIX}.tar.xz && cd -
        done
      - cd deploy
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "mkdir ${CI_REPO_NAME}" || true
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}; mkdir ${CI_COMMIT_BRANCH}" || true
      - smbclient "//$${DEPLOY_SERVER_ENV}" -U "$${DEPLOY_USER_NAME_ENV}%$${DEPLOY_USER_PASSWORD_ENV}" -c "cd ${CI_REPO_NAME}/${CI_COMMIT_BRANCH}; prompt; mput *"
    environment:
      DEPLOY_SERVER_ENV:
        from_secret: DEPLOY_SERVER
      DEPLOY_USER_NAME_ENV:
        from_secret: DEPLOY_USER_NAME
      DEPLOY_USER_PASSWORD_ENV:
        from_secret: DEPLOY_USER_PASSWORD
