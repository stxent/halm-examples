/*
 * {{group.name}}/{{group.alias}}/main.c
 * Automatically generated file
 */

#include "board.h"
#include <halm/delay.h>
#include <halm/pm.h>
#include <xcore/realtime.h>
/*----------------------------------------------------------------------------*/
/* Period between wake-ups in seconds */
#define WAKEUP_PERIOD 10
/*----------------------------------------------------------------------------*/
int main(void)
{
  boardSetupClockPll();

  const struct Pin led = pinInit(BOARD_LED);

  struct RtClock * const rtc = boardSetupRtc(false);
  rtSetAlarm(rtc, rtTime(rtc) + WAKEUP_PERIOD);

  uint32_t state = 0;

  while (1)
  {
    if (state > 0)
    {
      if (state % 2)
      {
        pinInput(led);
        pinSetPull(led, BOARD_LED_INV ? PIN_PULLDOWN : PIN_PULLUP);
      }
      else
        pinOutput(led, !BOARD_LED_INV);
    }
    else
      pinOutput(led, BOARD_LED_INV);

    mdelay(WAKEUP_PERIOD * (1000 / 2));
    ++state;

    /* Disable clocks and reset LED */
    pinOutput(led, BOARD_LED_INV);
    boardResetClock();

    /* Enter power-down mode */
    pmChangeState(PM_SUSPEND);

    /* Enable clocks and notify all drivers */
    boardSetupClockPll();
    pmChangeState(PM_ACTIVE);

    rtSetAlarm(rtc, rtTime(rtc) + WAKEUP_PERIOD);
  }

  return 0;
}
