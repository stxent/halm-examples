/*
 * {{group.name}}/adc_oneshot/main.c
 * Automatically generated file
 */

#include "board.h"
#include <halm/timer.h>
#include <xcore/interface.h>
#include <xcore/memory.h>
#include <stdio.h>
#include <string.h>
/*----------------------------------------------------------------------------*/
#define ADC_RATE 50
/*----------------------------------------------------------------------------*/
static void onTimerOverflow(void *argument)
{
  *(bool *)argument = true;
}
/*----------------------------------------------------------------------------*/
int main(void)
{
  bool event = false;

  boardSetupClockPll();

  const struct Pin led = pinInit(BOARD_LED);
  pinOutput(led, BOARD_LED_INV);

  struct Interface * const adc = boardSetupAdcOneShot();
  struct Interface * const serial = boardSetupSerial();

  struct Timer * const timer = boardSetupTimer();
  timerSetCallback(timer, onTimerOverflow, &event);
  timerSetOverflow(timer, timerGetFrequency(timer) / ADC_RATE);
  timerEnable(timer);

  while (1)
  {
    while (!event)
      barrier();
    event = false;

    uint16_t buffer;
    char text[8];

    ifRead(adc, &buffer, sizeof(buffer));

    sprintf(text, "%5u\r\n", (unsigned int)buffer);
    ifWrite(serial, text, strlen(text));

    pinToggle(led);
  }

  return 0;
}
