/*
 * {{group.name}}/{{group.alias}}/main.c
 * Automatically generated file
 */

#include "board.h"
#include <halm/delay.h>
#include <halm/platform/{{group.family}}/backup_domain.h>
#include <halm/pm.h>
#include <xcore/realtime.h>
/*----------------------------------------------------------------------------*/
#define MAGIC_WORD    0x3A84508FUL

/* Period between wake-ups in seconds */
#define WAKEUP_PERIOD 10
/*----------------------------------------------------------------------------*/
int main(void)
{
  boardSetupClockExt();

  const struct Pin led = pinInit(BOARD_LED);

  uint32_t * const backup = backupDomainAddress();
  const bool restartFlag = backup[0] == MAGIC_WORD;
  const uint32_t state = restartFlag ? backup[1] : 0;

  struct RtClock * const rtc = boardSetupRtc(restartFlag);
  rtSetAlarm(rtc, rtTime(rtc) + WAKEUP_PERIOD);

  if (state > 0)
  {
    if (state % 2)
    {
      pinInput(led);
      pinSetPull(led, BOARD_LED_INV ? PIN_PULLDOWN : PIN_PULLUP);
    }
    else
      pinOutput(led, !BOARD_LED_INV);
  }
  else
    pinOutput(led, BOARD_LED_INV);

  mdelay(WAKEUP_PERIOD * (1000 / 2));

  /* Save current state */
  backup[0] = MAGIC_WORD;
  backup[1] = state + 1;

  /* Enter deep power-down mode, LED will be disabled in this mode */
  pmChangeState(PM_SHUTDOWN);

  /* Execution never reaches this point */
  while (1);
  return 0;
}
