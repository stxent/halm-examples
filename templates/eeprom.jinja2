/*
 * {{group.name}}/eeprom/main.c
 * Automatically generated file
 */

#include "board.h"
#include <xcore/interface.h>
/*----------------------------------------------------------------------------*/
static bool program(struct Interface *interface, uint32_t address,
    size_t length, bool clear)
{
  uint32_t capacity;
  uint32_t next = 0;
  uint8_t buffer[length];

  if (ifGetParam(interface, IF_SIZE, &capacity) != E_OK)
    return false;
  if (capacity < address + (uint32_t)length)
    return false;

  for (size_t i = 0; i < length; ++i)
    buffer[i] = clear ? 0xFF : (uint8_t)i;

  if (ifSetParam(interface, IF_POSITION, &address) != E_OK)
    return false;
  if (ifWrite(interface, buffer, length) != length)
    return false;
  if (ifGetParam(interface, IF_POSITION, &next) != E_OK)
    return false;
  if (next != address + length)
    return false;

  return true;
}
/*----------------------------------------------------------------------------*/
static bool verify(struct Interface *interface, uint32_t address,
    size_t length, bool clear)
{
  uint32_t next = 0;
  uint8_t buffer[length];

  for (size_t i = 0; i < length; ++i)
    buffer[i] = 0;

  if (ifSetParam(interface, IF_POSITION, &address) != E_OK)
    return false;
  if (ifRead(interface, buffer, length) != length)
    return false;
  if (ifGetParam(interface, IF_POSITION, &next) != E_OK)
    return false;
  if (next != address + length)
    return false;

  for (size_t i = 0; i < length; ++i)
  {
    if (buffer[i] != (clear ? 0xFF : (uint8_t)i))
      return false;
  }

  return true;
}
/*----------------------------------------------------------------------------*/
int main(void)
{
  static const size_t BUFFER_LENGTH = 320;
  static const uint32_t EEPROM_ADDRESS = 64;

  boardSetupClockExt();

  const struct Pin led = pinInit(BOARD_LED);
  pinOutput(led, BOARD_LED_INV);

  struct Interface * const eeprom = boardSetupEeprom();

  /* Fill memory with pseudorandom pattern */

  if (!program(eeprom, EEPROM_ADDRESS, BUFFER_LENGTH, false))
    pinWrite(led, !BOARD_LED_INV);

  if (!verify(eeprom, EEPROM_ADDRESS, BUFFER_LENGTH, false))
    pinWrite(led, !BOARD_LED_INV);

  /* Reset memory to the default state */

  if (!program(eeprom, EEPROM_ADDRESS, BUFFER_LENGTH, true))
    pinWrite(led, !BOARD_LED_INV);

  if (!verify(eeprom, EEPROM_ADDRESS, BUFFER_LENGTH, true))
    pinWrite(led, !BOARD_LED_INV);

  while (1);
  return 0;
}
